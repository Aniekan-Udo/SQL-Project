Question Set #1

Question 1:
Create a query that lists each movie, the film category it is classified in, 
and the number of times it has been rented out.

SOLUTION 1.

WITH family_friendly AS (
SELECT 
	f.title AS film_title,
	c.name AS category_name,
	COUNT(*) AS rental_count
FROM category c
JOIN film_category fc
ON c.category_id=fc.category_id
JOIN film f
ON fc.film_id=f.film_id
JOIN inventory i
ON f.film_id = i.film_id
JOIN rental r
ON i.inventory_id=r.inventory_id
WHERE c.name IN ('Family', 'Animation', 'Children', 'Music','Classics', 'Comedy')
GROUP BY 1,2
ORDER  BY 2)
SELECT *
FROM family_friendly;

Question 2

Now we need to know how the length of rental duration of these family-friendly 
movies compares to the duration that all movies are rented for.

SOLUTION 2

WITH family_friendly_movies AS (
SELECT 
	f.title AS title,
	c.name AS name,
	f.rental_duration AS rental_duration,
	NTILE(4) OVER(PARTITION BY rental_duration) AS standard_quartile
FROM category c
JOIN film_category fc
ON c.category_id=fc.category_id
JOIN film f
ON fc.film_id=f.film_id
WHERE c.name IN ('Family', 'Animation', 'Children', 'Music','Classics', 'Comedy')
ORDER  BY 3,4)
SELECT *
FROM family_friendly_movies;

Question 3
Finally, provide a table with the family-friendly film category, each of the quartiles, 
and the corresponding count of movies within each combination of film category for each 
corresponding rental duration category

SOLUTION 3
 
WITH family_friendly AS (
SELECT 
	f.title AS title,
	c.name AS name,
	f.rental_duration AS rental_duration,
	CASE WHEN rental_duration <= 3 THEN '3 days'
		WHEN rental_duration BETWEEN 3 AND 4 THEN 'between 3 to 4 days'
		WHEN rental_duration BETWEEN 4 AND 5 THEN 'between 4 to 5 days'
		WHEN rental_duration BETWEEN 5 AND 6 THEN 'between 5 to 6 days' ELSE 'ABOVE SEVEN' END rental_avg,
		NTILE(4) OVER(PARTITION BY rental_duration) AS standard_quartile
				
				
FROM category AS c
JOIN film_category AS fc
ON c.category_id=fc.category_id
JOIN film AS f
ON fc.film_id=f.film_id
WHERE c.name IN ('Family', 'Animation', 'Children', 'Music','Classics', 'Comedy')
ORDER  BY 3,4)

SELECT name, standard_quartile, COUNT(rental_avg) AS count
FROM family_friendly
GROUP BY 1,2
ORDER BY 1,2;

QUESTION SET 2

Question 1:
We want to find out how the two stores compare in their count of 
rental orders during every month for all the years we have data for.

SOLUTION

SELECT rental_year, 
		rental_month,
		store_id,
		rental_count
FROM (SELECT 
	  DATE_PART('year',r.rental_date) AS rental_year,
	  DATE_PART('month',r.rental_date)AS rental_month,
	  st.store_id store_id,
	  COUNT(r.*) rental_count
	  
	FROM rental AS r
	JOIN staff AS s
	ON r.staff_id=s.staff_id
	JOIN store AS st
	ON s.staff_id=st.manager_staff_id	
	GROUP BY 1,2,3
	 	)sub
ORDER BY 4 DESC;